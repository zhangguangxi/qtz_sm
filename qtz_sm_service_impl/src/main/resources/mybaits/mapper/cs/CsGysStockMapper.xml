<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtz.sm.supp.dao.CsGysStockDao">
    <!-- cs_gys_stock table all BaseResultMap-->
    <resultMap id="BaseResultMap" type="com.qtz.sm.supp.vo.CsGysStock">
        <result column="dmId"  property="dmId"/>
        <result column="gys_id"  property="gysId"/>
        <result column="sku_id"  property="skuId"/>
        <result column="stock_quantity"  property="stockQuantity"/>
        <result column="await_quantity"  property="awaitQuantity"/>
        <result column="is_onsale"  property="isOnsale"/>
        <result column="onsale_time"  property="onsaleTime"/>
        <result column="is_check"  property="isCheck"/>
        <result column="price"  property="price"/>
        
        <!-- 追加商品信息 -->
        <result column="goods_id"  property="goodsId"/>
        <result column="goods_num"  property="goodsNum"/>
        <result column="goods_name"  property="goodsName"/>
        <result column="code" property="code" />
        
        
		<result column="price_init"  property="priceInit"/>
        
    </resultMap>
    
    <resultMap id="ListResultMap" type="com.qtz.sm.supp.vo.CsGysStock">
		<result column="goods_id"  property="goodsId"/>
        <result column="goods_num"  property="goodsNum"/>
        <result column="goods_name"  property="goodsName"/>
		<result column="code" property="code" />
		
		<collection property="csGysStockInfo" ofType="com.qtz.sm.supp.vo.CsGysStock">
			    <result column="dmId"  property="dmId"/>
		        <result column="gys_id"  property="gysId"/>
		        <result column="sku_id"  property="skuId"/>
		        <result column="stock_quantity"  property="stockQuantity"/>
		        <result column="await_quantity"  property="awaitQuantity"/>
		        <result column="is_onsale"  property="isOnsale"/>
		        <result column="onsale_time"  property="onsaleTime"/>
		        <result column="is_check"  property="isCheck"/>
		        <result column="price"  property="price"/>
		        <result column="price_init"  property="priceInit"/>
		</collection>
	</resultMap>
    
    
    
    
    <!-- cs_gys_stock table all fields-->
    <sql id="Base_Column_List" >
        t.dmId,
        t.gys_id,
        t.sku_id,
        t.stock_quantity,
        t.await_quantity,
        t.is_onsale,
        t.onsale_time,
        t.is_check,
        t.price,t.price_init
    </sql>
    <!-- 查询条件 -->
    <sql id="Example_Where_Clause">
        <where>
            <if test="dmId != null ">
                and t.dmId=#{dmId}
            </if>
            <if test="gysId != null ">
                and t.gys_id=#{gysId}
            </if>
            
            <if test="stockQuantity != null and stockQuantity != 0">
                and t.stock_quantity=#{stockQuantity}
            </if>
            <if test="awaitQuantity != null  and awaitQuantity != 0 ">
                and t.await_quantity=#{awaitQuantity}
            </if>
            
            <if test="isCheck != null ">
                and t.is_check=#{isCheck}
            </if>
            <if test="price != null ">
                and t.price=#{price}
            </if>    
            <if test="goodsId != null and goodsId !='' ">
              and t3.dmId = #{goodsId}
            </if>
            
            
            <if test="goodsName != null and goodsName !='' ">
              and t3.name  like CONCAT('%', #{goodsName},'%') 
            </if>
            <if test="code != null and code !='' ">
              and  t3.code   like CONCAT('%', #{code},'%')  
            </if>
            <if test="skuId != null ">
                and t.sku_id   like CONCAT('%', #{skuId},'%')  
            </if>
            <if test=" priceStart != null and priceStart != 0 ">
                <![CDATA[ and t.price >=  #{priceStart}   ]]>
            </if>
            <if test=" priceEnd != null  and priceEnd != 0 ">
                 <![CDATA[ and t.price <=  #{priceEnd}   ]]>
            </if>
            <if test=" stockQuantityStart != null and stockQuantityStart != 0  ">
                 <![CDATA[ and t.stock_quantity >=  #{stockQuantityStart}   ]]>
            </if>
            <if test=" stockQuantityEnd != null and stockQuantityEnd != 0 ">
                 <![CDATA[ and t.stock_quantity <=  #{stockQuantityEnd}   ]]>
            </if>
            <if test=" onsaleTimeStart != null  ">
                <![CDATA[ and t.onsale_time >=  #{onsaleTimeStart}   ]]>
            </if>
            <if test=" onsaleTimeEnd != null  ">
                <![CDATA[ and t.onsale_time <=  #{onsaleTimeEnd}   ]]>
            </if>
            <if test="isOnsale != null ">
                and t.is_onsale=#{isOnsale}
            </if>
        </where>

    </sql>
    <!-- 插入记录 [说明：如果要返回当前对象，需要如下配置：<insert id="addVo" parameterType="Object" useGeneratedKeys="true" keyProperty="id">] -->
    <insert id="addVo" parameterType="Object" >
        INSERT INTO cs_gys_stock(dmId,gys_id,sku_id,stock_quantity,await_quantity,is_onsale,is_check,price,price_init,onsale_time)
        VALUES(#{dmId},#{gysId},#{skuId},#{stockQuantity},#{awaitQuantity},#{isOnsale},#{isCheck},#{price},#{priceInit},#{onsaleTime})
    </insert>
    <!--批量插入记录 -->
    <insert id="addList" parameterType="java.util.List">
        INSERT INTO cs_gys_stock(dmId,gys_id,sku_id,stock_quantity,await_quantity,is_onsale,is_check,price,price_init,onsale_time) VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.dmId},#{item.gysId},#{item.skuId},#{item.stockQuantity},#{item.awaitQuantity},#{item.isOnsale},#{item.isCheck},#{item.price},#{item.priceInit},#{item.onsaleTime})
        </foreach>
    </insert>
    <!-- 删除记录 -->
    <delete id="delId" parameterType="Object">
        DELETE FROM cs_gys_stock WHERE dmId=#{dmId}
    </delete>
    <!--批量删除-->
    <delete id="delIds" parameterType="java.lang.String">
        DELETE FROM cs_gys_stock WHERE dmId IN
        <foreach item="idItem" collection="array" open="(" separator="," close=")"> #{idItem}  </foreach>
    </delete>
    <!--批量删除-->
    <delete id="delList" parameterType="java.util.List">
        DELETE FROM cs_gys_stock WHERE dmId IN
        <foreach item="idItem" collection="list" open="(" separator="," close=")"> #{idItem}  </foreach>
    </delete>
    <!-- 根据id，修改记录-->
    <update id="modVo" parameterType="Object" >
        UPDATE cs_gys_stock SET gys_id=#{gysId},sku_id=#{skuId},stock_quantity=#{stockQuantity},await_quantity=#{awaitQuantity},is_onsale=#{isOnsale},is_check=#{isCheck},price=#{price},price_init=#{priceInit},onsale_time=#{onsaleTime} WHERE dmId=#{dmId}
    </update>
    <!-- 修改记录，只修改只不为空的字段 -->
    <update id="modVoNotNull" parameterType="Object" >
        UPDATE cs_gys_stock
        <set>
            <if test="gysId != null ">
                gys_id=#{gysId},
            </if>
            <if test="skuId != null ">
                sku_id=#{skuId},
            </if>
            <if test="stockQuantity != null ">
                stock_quantity=#{stockQuantity},
            </if>
            <if test="awaitQuantity != null ">
                await_quantity=#{awaitQuantity},
            </if>
            <if test="isOnsale != null ">
                is_onsale=#{isOnsale},
            </if>
            <if test="isCheck != null ">
                is_check=#{isCheck},
            </if>
            <if test="price != null ">
                price=#{price},
            </if>
            <if test="priceInit != null  ">
				price_init=#{priceInit},
			</if>
			
			<if test="onsaleTime != null ">
                onsale_time=#{onsaleTime},
            </if>
	
        </set>
        WHERE dmId=#{dmId}
    </update>
    <!-- 根据id查询记录 -->
    <select id="findVo"  resultMap="BaseResultMap" parameterType="Object">
        SELECT <include refid="Base_Column_List" />
        FROM cs_gys_stock t WHERE t.dmId=#{dmId}
    </select>
    <!-- 列表总数-->
    <select id="queryCount" resultType="java.lang.Integer"  parameterType="Object">
        SELECT COUNT(1) 
        FROM `gd_goods` t3 
        <include refid="page_Where_Clause"/>
    </select>
    <!-- 分页查询列表 -->
    <select id="queryList" resultMap="BaseResultMap"  parameterType="Object">
       select t3.`dmId` goods_id,t3.`code` goods_num,t3.`code` code,t3.`name` goods_name
        FROM `gd_goods` t3
        <include refid="page_Where_Clause"/>
        <if test="mysqlOrderCondition != null and mysqlOrderCondition != ''" >
        ${mysqlOrderCondition}
        </if>
    </select>
    <sql id="page_Where_Clause">
		<where>
			<if test="goodsIds != null  ">
				and t3.dmId in
				<foreach collection="goodsIds" index="index" item="item"
					open="(" separator="," close=")">
					#{item}
				</foreach>
			</if>
		</where>
	</sql>
	
	<select id="queryFindList" resultMap="ListResultMap"  parameterType="Object">
        SELECT <include refid="Base_Column_List"/>,t3.`dmId` goods_id,t3.`code` goods_num,t3.`code` code,t3.`name` goods_name
        FROM cs_gys_stock t
        LEFT JOIN `gd_goods_sku` t2 ON t.`sku_id` = t2.`dmId` 
        LEFT JOIN `gd_goods` t3 ON t2.`goods_id` = t3.`dmId`
        <include refid="Example_Where_Clause"/>
        order by t3.dmId  desc
    </select>
	
	
	
    <!-- 查询列表 -->
    <select id="findList" resultMap="BaseResultMap"  parameterType="Object">
        SELECT <include refid="Base_Column_List"/>
        FROM cs_gys_stock t
         <include refid="Example_Where_Clause"/>
    </select>
    



	<!-- 库存列表
	<sql id="stockListWhere">
        <where>
            <if test="startTimeStamp != null and endTimeStamp !=null ">
                and t1.onsale_time BETWEEN #{startTimeStamp} AND #{endTimeStamp}
            </if>
            <if test="minPrice != null and maxPrice !=null ">
                and t1.price BETWEEN #{minPrice} AND #{maxPrice}
            </if>
            <if test="isOnsale != null ">
                and t1.is_onsale=#{isOnsale}
            </if>
        </where>
    </sql>
	<resultMap id="stockListResultMap" type="java.util.Map">
        <result column="goods_id"  property="goodsId"/>
        <result column="goods_num"  property="goodsNum"/>
        <result column="goods_name"  property="goodsName"/>
        <result column="sku_id"  property="skuId"/>
        <result column="price"  property="price"/>
        <result column="stock_quantity"  property="stockQuantity"/>
        <result column="await_quantity"  property="awaitQuantity"/>
        <result column="is_onsale"  property="isOnsale"/>
        <result column="is_check"  property="isCheck"/>
        <result column="onsale_time"  property="onsaleTime"/>
    </resultMap>
    <select id="stockList" resultMap="stockListResultMap"  parameterType="Object">
		SELECT t3.`dmId` goods_id,t3.`code` goods_num,t3.`name` goods_name,t2.`dmId` sku_id,t1.price price,
		  t1.stock_quantity stock_quantity,t1.await_quantity await_quantity,t1.is_onsale is_onsale,t1.onsale_time onsale_time 
		FROM `cs_gys_stock` t1 LEFT JOIN `gd_goods_sku` t2 ON t1.`sku_id` = t2.`dmId` LEFT JOIN `gd_goods` t3 ON t2.`goods_id` = t3.`dmId` 
		<include refid="stockListWhere"/>
		<if test="mysqlOrderCondition != null and mysqlOrderCondition != ''" >
        	${mysqlOrderCondition}
        </if>
    </select>  -->
    
    
    <!-- 根据skuId查询记录 -->
    <select id="gysDeductionsStock"  resultMap="BaseResultMap" parameterType="Object">
        SELECT <include refid="Base_Column_List" />
        FROM cs_gys_stock t WHERE t.sku_id=#{skuId}
    </select>
    
    <!-- 根据skuId查询记录 -->
    <select id="queryCsGysStockInfo"  resultMap="BaseResultMap" parameterType="Object">
        SELECT <include refid="Base_Column_List" />
        FROM cs_gys_stock t WHERE t.sku_id=#{skuId}
    </select>
    
     <!-- 根据商品ID连差商品SKU表，获取SKU价格信息 欧江波 928482427@qq.com -->
    <select id="getStocksByGoodsId"  resultMap="BaseResultMap" parameterType="Object">
      SELECT 
		  t1.`dmId`,
		  t1.`gys_id`,
		  t1.`sku_id`,
		  t1.`stock_quantity`,
		  t1.`await_quantity`,
		  t1.`is_onsale`,
		  t1.`onsale_time`,
		  t1.`is_check`,
		  t1.`price` 
		FROM
		  `cs_gys_stock` t1 LEFT JOIN `gd_goods_sku` t2
		ON t1.`sku_id` = t2.`dmId`
		WHERE t2.`goods_id` = #{goodsId}
    </select>
</mapper>