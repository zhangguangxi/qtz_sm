<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtz.sm.goods.dao.GdGoodsDescPictureDao" >
<!-- Result Map com.qtz.sm.goods.vo.GdGoodsDescPicture-->
<resultMap id="BaseResultMap" type="GdGoodsDescPicture" >
	 <result column="dmId"  property="dmId"/> 
<result column="goods_id"  property="goodsId"/> 
<result column="pic_url"  property="picUrl"/> 
<result column="create_on"  property="createOn"/> 
	
</resultMap>

<!-- gd_goods_desc_picture table all fields -->
<sql id="Base_Column_List" >
	 t.dmId,t.goods_id,t.pic_url,t.create_on
</sql>

<!-- 查询条件 -->
<sql id="Example_Where_Clause">
<where>
	<if test="dmId != null  ">
		 and t.dmId=#{dmId}
	</if>
	<if test="goodsId != null  ">
		 and t.goods_id=#{goodsId}
	</if>
	<if test="picUrl != null  and picUrl != '' ">
		 and t.pic_url=#{picUrl}
	</if>
	<if test="createOn != null  ">
		 and t.create_on=#{createOn}
	</if>

</where>
</sql>
   

<!-- 插入记录 [说明：如果要返回当前对象，需要如下配置：<insert id="addVo" parameterType="Object" useGeneratedKeys="true" keyProperty="id">] -->
<insert id="addVo" parameterType="Object" >
  insert into gd_goods_desc_picture(dmId,goods_id,pic_url,create_on)
 values(#{dmId},#{goodsId},#{picUrl},#{createOn})
</insert>
<!--批量插入记录 -->
<insert id="addList" parameterType="java.util.List">
  insert into gd_goods_desc_picture(dmId,goods_id,pic_url,create_on) values
   <foreach collection="list" item="item" index="index" separator=",">
	  (
	  	 #{item.dmId},#{item.goodsId},#{item.picUrl},#{item.createOn}
	  )
	  </foreach> 
</insert>


<!-- 删除记录 -->
<delete id="delId" parameterType="Object">
	delete 	 from gd_goods_desc_picture where dmId = #{dmId}
</delete>
<!--批量删除-->
<delete id="delIds" parameterType="java.lang.String">
	delete 	 from gd_goods_desc_picture where dmId in 
	<foreach item="idItem" collection="array" open="(" separator="," close=")"> 
	#{idItem}
	</foreach> 
</delete>
<!--批量删除-->
<delete id="delList" parameterType="java.util.List">
	delete 	 from gd_goods_desc_picture where dmId in 
	<foreach item="idItem" collection="list" index="index" open="(" separator="," close=")"> 
	#{idItem}
	</foreach> 
</delete>

<!-- 根据id，修改记录-->  
 <update id="modVo" parameterType="Object" >
  update gd_goods_desc_picture set goods_id=#{goodsId},pic_url=#{picUrl},create_on=#{createOn} where dmId=#{dmId}
 </update>
 <!-- 修改记录，只修改只不为空的字段 -->
<update id="modVoNotNull" parameterType="Object" >
	update gd_goods_desc_picture set 
	<trim  suffixOverrides="," >
	<if test="goodsId != null  ">
		goods_id=#{goodsId},
	</if>
	<if test="picUrl != null  and picUrl != '' ">
		pic_url=#{picUrl},
	</if>
	<if test="createOn != null  ">
		create_on=#{createOn},
	</if>
	</trim> where dmId=#{dmId}
</update>


 
<!-- 根据id查询 商品描述图片 -->
<select id="findVo"  resultMap="BaseResultMap" parameterType="Object">
	select <include refid="Base_Column_List" /> 
	 from gd_goods_desc_picture t where t.dmId = #{dmId}
</select>

<!-- 商品描述图片 列表总数-->
<select id="queryCount" resultType="java.lang.Integer"  parameterType="Object">
	select count(1) from gd_goods_desc_picture t 
	<include refid="Example_Where_Clause"/>
</select>

<!-- 分页查询商品描述图片列表 -->
<select id="queryList" resultMap="BaseResultMap"  parameterType="Object">
	select 
	<include refid="Base_Column_List"/>
	from gd_goods_desc_picture t 
	<include refid="Example_Where_Clause"/>
    <if test="mysqlQueryCondition != null and mysqlQueryCondition != ''" >
       ${mysqlQueryCondition}
    </if>
</select>

<!-- 查询商品描述图片列表 -->
<select id="findList" resultMap="BaseResultMap"  parameterType="Object">
	select 
	<include refid="Base_Column_List"/>
	from gd_goods_desc_picture t 
	<include refid="Example_Where_Clause"/>
</select>

</mapper>